// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CooldownPeriodUpdated extends ethereum.Event {
  get params(): CooldownPeriodUpdated__Params {
    return new CooldownPeriodUpdated__Params(this);
  }
}

export class CooldownPeriodUpdated__Params {
  _event: CooldownPeriodUpdated;

  constructor(event: CooldownPeriodUpdated) {
    this._event = event;
  }

  get oldCoolDownPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newCooldownPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EnableRedeemUpdated extends ethereum.Event {
  get params(): EnableRedeemUpdated__Params {
    return new EnableRedeemUpdated__Params(this);
  }
}

export class EnableRedeemUpdated__Params {
  _event: EnableRedeemUpdated;

  constructor(event: EnableRedeemUpdated) {
    this._event = event;
  }

  get oldAccess(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get newAccess(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RewardWalletUpdated extends ethereum.Event {
  get params(): RewardWalletUpdated__Params {
    return new RewardWalletUpdated__Params(this);
  }
}

export class RewardWalletUpdated__Params {
  _event: RewardWalletUpdated;

  constructor(event: RewardWalletUpdated) {
    this._event = event;
  }

  get oldRewardWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRewardWallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SignerUpdated extends ethereum.Event {
  get params(): SignerUpdated__Params {
    return new SignerUpdated__Params(this);
  }
}

export class SignerUpdated__Params {
  _event: SignerUpdated;

  constructor(event: SignerUpdated) {
    this._event = event;
  }

  get oldSigner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSigner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokensDeposited extends ethereum.Event {
  get params(): TokensDeposited__Params {
    return new TokensDeposited__Params(this);
  }
}

export class TokensDeposited__Params {
  _event: TokensDeposited;

  constructor(event: TokensDeposited) {
    this._event = event;
  }

  get depositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokensRedeemed extends ethereum.Event {
  get params(): TokensRedeemed__Params {
    return new TokensRedeemed__Params(this);
  }
}

export class TokensRedeemed__Params {
  _event: TokensRedeemed;

  constructor(event: TokensRedeemed) {
    this._event = event;
  }

  get redeemer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TaskRewards extends ethereum.SmartContract {
  static bind(address: Address): TaskRewards {
    return new TaskRewards("TaskRewards", address);
  }

  cooldownPeriod(): BigInt {
    let result = super.call("cooldownPeriod", "cooldownPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_cooldownPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "cooldownPeriod",
      "cooldownPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  enableRedeem(): boolean {
    let result = super.call("enableRedeem", "enableRedeem():(bool)", []);

    return result[0].toBoolean();
  }

  try_enableRedeem(): ethereum.CallResult<boolean> {
    let result = super.tryCall("enableRedeem", "enableRedeem():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastRedeemTime(param0: Address): BigInt {
    let result = super.call(
      "lastRedeemTime",
      "lastRedeemTime(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_lastRedeemTime(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastRedeemTime",
      "lastRedeemTime(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rewardWallet(): Address {
    let result = super.call("rewardWallet", "rewardWallet():(address)", []);

    return result[0].toAddress();
  }

  try_rewardWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("rewardWallet", "rewardWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tomiToken(): Address {
    let result = super.call("tomiToken", "tomiToken():(address)", []);

    return result[0].toAddress();
  }

  try_tomiToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("tomiToken", "tomiToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userRedeemHistory(param0: Address): BigInt {
    let result = super.call(
      "userRedeemHistory",
      "userRedeemHistory(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userRedeemHistory(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userRedeemHistory",
      "userRedeemHistory(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get signerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tomiTokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get cooldownDuration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get rewardWalletAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RedeemTokensCall extends ethereum.Call {
  get inputs(): RedeemTokensCall__Inputs {
    return new RedeemTokensCall__Inputs(this);
  }

  get outputs(): RedeemTokensCall__Outputs {
    return new RedeemTokensCall__Outputs(this);
  }
}

export class RedeemTokensCall__Inputs {
  _call: RedeemTokensCall;

  constructor(call: RedeemTokensCall) {
    this._call = call;
  }

  get deadline(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class RedeemTokensCall__Outputs {
  _call: RedeemTokensCall;

  constructor(call: RedeemTokensCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCooldownPeriodCall extends ethereum.Call {
  get inputs(): UpdateCooldownPeriodCall__Inputs {
    return new UpdateCooldownPeriodCall__Inputs(this);
  }

  get outputs(): UpdateCooldownPeriodCall__Outputs {
    return new UpdateCooldownPeriodCall__Outputs(this);
  }
}

export class UpdateCooldownPeriodCall__Inputs {
  _call: UpdateCooldownPeriodCall;

  constructor(call: UpdateCooldownPeriodCall) {
    this._call = call;
  }

  get newCooldownPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateCooldownPeriodCall__Outputs {
  _call: UpdateCooldownPeriodCall;

  constructor(call: UpdateCooldownPeriodCall) {
    this._call = call;
  }
}

export class UpdateEnableRedeemCall extends ethereum.Call {
  get inputs(): UpdateEnableRedeemCall__Inputs {
    return new UpdateEnableRedeemCall__Inputs(this);
  }

  get outputs(): UpdateEnableRedeemCall__Outputs {
    return new UpdateEnableRedeemCall__Outputs(this);
  }
}

export class UpdateEnableRedeemCall__Inputs {
  _call: UpdateEnableRedeemCall;

  constructor(call: UpdateEnableRedeemCall) {
    this._call = call;
  }

  get enabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class UpdateEnableRedeemCall__Outputs {
  _call: UpdateEnableRedeemCall;

  constructor(call: UpdateEnableRedeemCall) {
    this._call = call;
  }
}

export class UpdateRewardWalletCall extends ethereum.Call {
  get inputs(): UpdateRewardWalletCall__Inputs {
    return new UpdateRewardWalletCall__Inputs(this);
  }

  get outputs(): UpdateRewardWalletCall__Outputs {
    return new UpdateRewardWalletCall__Outputs(this);
  }
}

export class UpdateRewardWalletCall__Inputs {
  _call: UpdateRewardWalletCall;

  constructor(call: UpdateRewardWalletCall) {
    this._call = call;
  }

  get newRewardWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateRewardWalletCall__Outputs {
  _call: UpdateRewardWalletCall;

  constructor(call: UpdateRewardWalletCall) {
    this._call = call;
  }
}

export class UpdateSignerAddressCall extends ethereum.Call {
  get inputs(): UpdateSignerAddressCall__Inputs {
    return new UpdateSignerAddressCall__Inputs(this);
  }

  get outputs(): UpdateSignerAddressCall__Outputs {
    return new UpdateSignerAddressCall__Outputs(this);
  }
}

export class UpdateSignerAddressCall__Inputs {
  _call: UpdateSignerAddressCall;

  constructor(call: UpdateSignerAddressCall) {
    this._call = call;
  }

  get newSigner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateSignerAddressCall__Outputs {
  _call: UpdateSignerAddressCall;

  constructor(call: UpdateSignerAddressCall) {
    this._call = call;
  }
}
